==114477== Memcheck, a memory error detector
==114477== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==114477== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==114477== Command: ws
==114477== Parent PID: 66299
==114477== 
==114477== 
==114477== Process terminating with default action of signal 6 (SIGABRT)
==114477==    at 0x5754387: raise (in /usr/lib64/libc-2.17.so)
==114477==    by 0x5755A77: abort (in /usr/lib64/libc-2.17.so)
==114477==    by 0x4ED068B: __gnu_cxx::__verbose_terminate_handler() [clone .cold] (vterminate.cc:95)
==114477==    by 0x4EDB995: __cxxabiv1::__terminate(void (*)()) (eh_terminate.cc:48)
==114477==    by 0x4EDBA00: std::terminate() (eh_terminate.cc:58)
==114477==    by 0x4EDC6CE: __cxa_pure_virtual (pure.cc:50)
==114477==    by 0x403BDA: seneca::Team::showMembers() const (team.h:63)
==114477==    by 0x402190: main (tester_1.cpp:111)
==114477== 
==114477== HEAP SUMMARY:
==114477==     in use at exit: 165 bytes in 4 blocks
==114477==   total heap usage: 13 allocs, 9 frees, 73,018 bytes allocated
==114477== 
==114477== 17 bytes in 1 blocks are still reachable in loss record 1 of 4
==114477==    at 0x4C2A593: operator new(unsigned long) (vg_replace_malloc.c:344)
==114477==    by 0x4F6BD1E: void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) (basic_string.tcc:219)
==114477==    by 0x403938: seneca::Team::Team(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (team.h:17)
==114477==    by 0x401A90: main (tester_1.cpp:62)
==114477== 
==114477== 20 bytes in 1 blocks are still reachable in loss record 2 of 4
==114477==    at 0x4C2A593: operator new(unsigned long) (vg_replace_malloc.c:344)
==114477==    by 0x4F6BD1E: void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) (basic_string.tcc:219)
==114477==    by 0x403938: seneca::Team::Team(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (team.h:17)
==114477==    by 0x401A2F: main (tester_1.cpp:61)
==114477== 
==114477== 64 bytes in 1 blocks are still reachable in loss record 3 of 4
==114477==    at 0x4C2A593: operator new(unsigned long) (vg_replace_malloc.c:344)
==114477==    by 0x406661: __gnu_cxx::new_allocator<seneca::Character*>::allocate(unsigned long, void const*) (new_allocator.h:115)
==114477==    by 0x40636E: std::allocator_traits<std::allocator<seneca::Character*> >::allocate(std::allocator<seneca::Character*>&, unsigned long) (alloc_traits.h:460)
==114477==    by 0x405EA1: std::_Vector_base<seneca::Character*, std::allocator<seneca::Character*> >::_M_allocate(unsigned long) (stl_vector.h:346)
==114477==    by 0x405641: void std::vector<seneca::Character*, std::allocator<seneca::Character*> >::_M_realloc_insert<seneca::Character* const&>(__gnu_cxx::__normal_iterator<seneca::Character**, std::vector<seneca::Character*, std::allocator<seneca::Character*> > >, seneca::Character* const&) (vector.tcc:440)
==114477==    by 0x40468D: std::vector<seneca::Character*, std::allocator<seneca::Character*> >::push_back(seneca::Character* const&) (stl_vector.h:1198)
==114477==    by 0x403A9B: seneca::Team::addMember(seneca::Character*) (team.h:36)
==114477==    by 0x401F88: main (tester_1.cpp:94)
==114477== 
==114477== 64 bytes in 1 blocks are still reachable in loss record 4 of 4
==114477==    at 0x4C2A593: operator new(unsigned long) (vg_replace_malloc.c:344)
==114477==    by 0x406661: __gnu_cxx::new_allocator<seneca::Character*>::allocate(unsigned long, void const*) (new_allocator.h:115)
==114477==    by 0x40636E: std::allocator_traits<std::allocator<seneca::Character*> >::allocate(std::allocator<seneca::Character*>&, unsigned long) (alloc_traits.h:460)
==114477==    by 0x405EA1: std::_Vector_base<seneca::Character*, std::allocator<seneca::Character*> >::_M_allocate(unsigned long) (stl_vector.h:346)
==114477==    by 0x405641: void std::vector<seneca::Character*, std::allocator<seneca::Character*> >::_M_realloc_insert<seneca::Character* const&>(__gnu_cxx::__normal_iterator<seneca::Character**, std::vector<seneca::Character*, std::allocator<seneca::Character*> > >, seneca::Character* const&) (vector.tcc:440)
==114477==    by 0x40468D: std::vector<seneca::Character*, std::allocator<seneca::Character*> >::push_back(seneca::Character* const&) (stl_vector.h:1198)
==114477==    by 0x403A9B: seneca::Team::addMember(seneca::Character*) (team.h:36)
==114477==    by 0x402037: main (tester_1.cpp:102)
==114477== 
==114477== LEAK SUMMARY:
==114477==    definitely lost: 0 bytes in 0 blocks
==114477==    indirectly lost: 0 bytes in 0 blocks
==114477==      possibly lost: 0 bytes in 0 blocks
==114477==    still reachable: 165 bytes in 4 blocks
==114477==         suppressed: 0 bytes in 0 blocks
==114477== 
==114477== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
